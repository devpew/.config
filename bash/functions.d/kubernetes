#!/usr/bin/env bash

# Display pod workload information
alias kp='kubectl get pods -o custom-columns=NAME:.metadata.name,STATUS:.status.phase,RESTARTS:.status.containerStatuses[*].restartCount,M_REQUESTS:.spec.containers[*].resources.requests.memory,M_LIMITS:.spec.containers[*].resources.limits.memory,NODE_IP:.status.hostIP,POD_IP:.status.podIP'

# Display pod's images information
alias kpi='kubectl get pods -o custom-columns=NAME:.metadata.name,CONTAINERS:.spec.containers[*].name,Images:.spec.containers[*].image'

# Display in-depth ingress objects
alias kingress='kubectl get ingress -o custom-columns="NAMESPACE:.metadata.namespace,NAME:.metadata.name,CLASS:.metadata.annotations.kubernetes\.io/ingress\.class,HOSTS:.spec.rules[*].host,PATHS:.spec.rules[*].http.paths[*].path"'

alias kingress-wide='kubectl get ingress -o custom-columns="NAMESPACE:.metadata.namespace,NAME:.metadata.name,CLASS:.metadata.annotations.kubernetes\.io/ingress\.class,HOSTS:.spec.rules[*].host,PATHS:.spec.rules[*].http.paths[*].path,SERVICES:.spec.rules[*].http.paths[*].backend.serviceName,PORTS:.spec.rules[*].http.paths[*].backend.servicePort"'

# Show recent pod termination states
# alias krestarts='kubectl get pod -o=custom-columns=NAME:.metadata.labels.app,RESTARTS:.status.containerStatuses[*].restartCount,REASON:.status.containerStatuses[*].lastState.terminated.reason,EXIT_CODE:status.containerStatuses[*].lastState.terminated.exitCode --sort-by="{.status.containerStatuses[:1].restartCount}"'
alias krestarts='kubectl get pod -o=custom-columns=NAME:.metadata.name,RESTARTS:.status.containerStatuses[*].restartCount,REASON:.status.containerStatuses[*].lastState.terminated.reason,EXIT_CODE:status.containerStatuses[*].lastState.terminated.exitCode,LAST_RESTART_TIME:.status.containerStatuses[*].lastState.terminated.finishedAt,MEMORY_LIMIT:.spec.containers[*].resources.limits.memory --sort-by="{.status.containerStatuses[:1].restartCount}"'

# Order events by creation timestamp
alias kevents='kubectl get events --sort-by=.metadata.creationTimestamp'

alias knode-internal="kubectl get node -o jsonpath='{ \$.items[*].status.addresses[?(@.type==\"InternalIP\")].address }'"

# Show cpu/memory matrix for pods
kstats() {
	local COLS="NAME:.metadata.name"
	COLS="$COLS,CPU_REQ(cores):.spec.containers[*].resources.requests.cpu"
	COLS="$COLS,MEMORY_REQ(bytes):.spec.containers[*].resources.requests.memory"
	COLS="$COLS,CPU_LIM(cores):.spec.containers[*].resources.limits.cpu"
	COLS="$COLS,MEMORY_LIM(bytes):.spec.containers[*].resources.limits.memory"

	local top; top="$(kubectl top pods "$@")"
	local pods; pods="$(kubectl get pods -o custom-columns="$COLS" "$@")"

	join -a1 -a2 -o 0,1.2,1.3,2.2,2.3,2.4,2.5, -e '<none>' \
		<(echo "$top") <(echo "$pods") | column -t -s' '
}

#  vim: set ft=sh ts=2 sw=2 tw=80 noet :
